<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CESI on Lab d&#39;Alfi</title>
    <link>/categories/cesi/</link>
    <description>Lab d&#39;Alfi (CESI)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Fri, 24 May 2024 23:38:17 +0200</lastBuildDate>
    
    <atom:link href="/categories/cesi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>üéì Projet de Fin d&#39;√âtude | part1 Les premiers pas</title>
      <link>/posts/cesi/pfe/pfe_par1/</link>
      <pubDate>Fri, 24 May 2024 23:38:17 +0200</pubDate>
      
      <guid>/posts/cesi/pfe/pfe_par1/</guid>
      <description>&lt;p&gt;Dans le cadre de la validation de mon cursus d&amp;rsquo;√©tude, je dois r√©aliser un projet de fin d&amp;rsquo;√©tudes.
Projet qui doit √™tre r√©alis√© au sein de l&amp;rsquo;entreprise o√π je me trouve.&lt;/p&gt;
&lt;p&gt;Le projet consiste √† cr√©er une application Android qui permet, via l&amp;rsquo;API de GLPI, de mettre √† jour la base de donn√©es.&lt;/p&gt;
&lt;p&gt;L&amp;rsquo;application devra :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;√ätre simple d&amp;rsquo;utilisation&lt;/li&gt;
&lt;li&gt;Permettre d&amp;rsquo;affecter un √©quipement un utilisateur&lt;/li&gt;
&lt;li&gt;Permettre de changer l&amp;rsquo;affectation d&amp;rsquo;un √©quipement √† un utilisateur&lt;/li&gt;
&lt;li&gt;Changer le statut d&amp;rsquo;un √©quipement&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;technologies-utilis√©es&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#technologies-utilis%c3%a9es&#34;&gt;
        #
    &lt;/a&gt;
    Technologies utilis√©es
&lt;/div&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;flutter&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#flutter&#34;&gt;
        ##
    &lt;/a&gt;
    Flutter
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;Flutter, c&amp;rsquo;est un outil gratuit de Google qui te permet de cr√©er des applis pour mobile, web et ordinateur avec un seul code. En gros, tu √©cris ton code une fois et tu peux le faire tourner partout. Il utilise un langage appel√© Dart, mais l&amp;rsquo;important, c&amp;rsquo;est que tu peux faire de super belles interfaces rapidement et facilement. C&amp;rsquo;est super pratique pour avoir une appli qui marche bien et qui a le m√™me look sur toutes les plateformes.&lt;/p&gt;
&lt;h3 id=&#34;postman&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#postman&#34;&gt;
        ##
    &lt;/a&gt;
    Postman
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;Postman, c&amp;rsquo;est un outil super pratique pour tester des API. Tu peux envoyer des requ√™tes HTTP et voir les r√©ponses, sans avoir √† √©crire du code compliqu√©. En gros, c&amp;rsquo;est comme un couteau suisse pour les d√©veloppeurs qui bossent avec des API : tu peux tester, d√©boguer, et documenter tes endpoints super facilement. C&amp;rsquo;est super utile pour v√©rifier que tout fonctionne bien avant de mettre en ligne ton application.&lt;/p&gt;
&lt;h3 id=&#34;glpi-dans-un-docker&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#glpi-dans-un-docker&#34;&gt;
        ##
    &lt;/a&gt;
    GLPI (dans un Docker)
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;GLPI, c&amp;rsquo;est un outil open-source pour g√©rer tout ce qui concerne l&amp;rsquo;informatique dans une entreprise. Il t&amp;rsquo;aide √† suivre les √©quipements, g√©rer les tickets de support, et organiser les t√¢ches de maintenance. En gros, c&amp;rsquo;est comme un tableau de bord pour tout ce qui touche √† l&amp;rsquo;IT : tu sais toujours ce qui se passe, o√π sont tes ressources, et quelles sont les priorit√©s. Super utile pour garder tout en ordre et r√©soudre les probl√®mes rapidement.&lt;/p&gt;
&lt;p&gt;N&amp;rsquo;ayant pas eu l&amp;rsquo;autorisation de ma hi√©rarchie pour acc√©der √† l&amp;rsquo;API du GLPI de l&amp;rsquo;entreprise, j&amp;rsquo;en ai donc install√© un en local gr√¢ce √† Docker sur mon pc personnel.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;premiers-pas&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#premiers-pas&#34;&gt;
        #
    &lt;/a&gt;
    Premiers pas
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;Dans cette premi√®re partie, le but est de prendre en main &lt;em&gt;Postman&lt;/em&gt; que j&amp;rsquo;utiliserai durant ce projet, comme expliquer plus haut, pour faire des appels √† l&amp;rsquo;API de GLPI.&lt;/p&gt;
&lt;p&gt;Comme c&amp;rsquo;est la premi√®re fois que j&amp;rsquo;utilise Postman, je ne comprends pas grand-chose, raison pour laquelle j&amp;rsquo;ai une petite ToDo list.&lt;/p&gt;
&lt;p&gt;Mon but, c&amp;rsquo;est donc :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;D&amp;rsquo;activer l&amp;rsquo;API&lt;/li&gt;
&lt;li&gt;Faire mes premiers call avec Postman sur l&amp;rsquo;API de GLPI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C&amp;rsquo;est pas beaucoup, mais √ßa a √©t√© un sacr√© bordel, surtout au niveau de Postman.&lt;/p&gt;
&lt;h2 id=&#34;activer-lapi-de-glpi&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#activer-lapi-de-glpi&#34;&gt;
        #
    &lt;/a&gt;
    Activer l&amp;rsquo;API de GLPI
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;Rien de bien compliqu√©. Si vous avez un full acc√®s √† votre GLPI, rendez vous dans &lt;em&gt;Configuration (1)&lt;/em&gt; &amp;gt; &lt;em&gt;G√©n√©ral (2)&lt;/em&gt; &amp;gt; &lt;em&gt;API (3)&lt;/em&gt; &amp;gt; &lt;em&gt;Activer l&amp;rsquo;API Rest (4)&lt;/em&gt; &amp;gt; &lt;em&gt;Activer la connexion avec identifiants (5)&lt;/em&gt; et enfin cliquez sur &lt;em&gt;Sauvegarder&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;activer l&amp;rsquo;api&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/activation_api2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Voil√†, donc maintenant l&amp;rsquo;API est activ√©, il faut ensuite rajouter un nouveau client de l&amp;rsquo;API, c&amp;rsquo;est le bouton qui se trouve juste en dessous.&lt;/p&gt;
&lt;p&gt;Donner un nom (1), ensuite d√©finir la plage d&amp;rsquo;adresse IP qui sera utiliser par l&amp;rsquo;API, ici, c&amp;rsquo;est le range du Docker (2) et pour finir, faut s&amp;rsquo;assurer que la case &amp;ldquo;&lt;em&gt;Reg√©n√©rer&lt;/em&gt;&amp;rdquo; est coch√©e, ce qui permettra d&amp;rsquo;avoir un jeton, on en aura besoin pour plus tard.
&lt;img alt=&#34;activer l&amp;rsquo;api&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/client_api.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;la-documentation&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#la-documentation&#34;&gt;
        ##
    &lt;/a&gt;
    La documentation
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;Maintenant que le client est cr√©√© et que l&amp;rsquo;API est activ√©e, il est temps de s&amp;rsquo;y rendre.
De retour sur la section consacr√©e √† l&amp;rsquo;API, il y a une ligne appel√©e &lt;em&gt;URL de l&amp;rsquo;API&lt;/em&gt; avec un lien vers celle-ci, qui est (dans mon cas): &lt;code&gt;http://localhost:8080/apirest.php/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En se rendant sur cette page, on a donc acc√®s √† la documentation compl√®te de l&amp;rsquo;API, ce qui va √™tre tr√®s utile par la suite avec Postman.&lt;/p&gt;
&lt;h2 id=&#34;utilisation-de-postman&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#utilisation-de-postman&#34;&gt;
        #
    &lt;/a&gt;
    Utilisation de Postman
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;Postman, √ßa ressemble √† √ßa :
&lt;img alt=&#34;postman&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/postman.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;En rouge, c&amp;rsquo;est les requ√™tes HTTP. Celles qui nous int√©ressent sont :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GET&lt;/strong&gt; qui a pour but d&amp;rsquo;aller chercher une page ou de la donn√©e.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;POST&lt;/strong&gt; a pour but d&amp;rsquo;envoyer de l&amp;rsquo;information contenue dans le &lt;em&gt;&lt;strong&gt;body&lt;/strong&gt;&lt;/em&gt; de la requ√™te, vers le serveur.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PUT&lt;/strong&gt; va √©craser une ressource avec de la nouvelle donn√©e, l√† aussi d√©finie dans le &lt;em&gt;&lt;strong&gt;body&lt;/strong&gt;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt; je pense pas avoir besoin d&amp;rsquo;expliquer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En jaune, c&amp;rsquo;est l&amp;rsquo;URL qui comporte toutes les &lt;em&gt;query&lt;/em&gt; qui sont des donn√©es au format &lt;code&gt;cl√©=valeur&lt;/code&gt; apr√®s un &lt;code&gt;?&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Par exemple : &lt;code&gt;leboncoin.fr/recherche/?category=9&amp;amp;locations=r_12&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Les champs &lt;em&gt;category&lt;/em&gt; et &lt;em&gt;location&lt;/em&gt; sont des &lt;em&gt;query&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;premier-call-vers-lapi&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#premier-call-vers-lapi&#34;&gt;
        ##
    &lt;/a&gt;
    Premier call vers l&amp;rsquo;API
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;Pour initialiser la premi√®re connexion, il faut d&amp;rsquo;abord savoir quoi faire. Donc, direction la documentation, section &lt;em&gt;&lt;strong&gt;Init session&lt;/strong&gt;&lt;/em&gt;. Cette requ√™te va permettre de g√©n√©rer un token de session qui servira √† l&amp;rsquo;utilisation de l&amp;rsquo;API. Pour g√©n√©rer cette requ√™te, on va avoir besoin de certains param√®tres. Il y a le choix entre 2 solutions :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;l&amp;rsquo;utilisation d&amp;rsquo;un &lt;em&gt;user_token&lt;/em&gt; (qui est la m√©thode la plus simple)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;l&amp;rsquo;&lt;em&gt;App-Token&lt;/em&gt; coupl√© avec un &lt;em&gt;login&lt;/em&gt; et &lt;em&gt;password&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On va donc prendre la premi√®re option.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pour r√©cup√©rer ce token, faut aller dans &lt;em&gt;Administration&lt;/em&gt; &amp;gt; &lt;em&gt;Utilisateurs&lt;/em&gt; &amp;gt; &lt;em&gt;{username}&lt;/em&gt; et, tout en bas de la page, dans la section &lt;strong&gt;Clef d&amp;rsquo;acc√®s distant&lt;/strong&gt; doit appara√Ætre le &lt;em&gt;Jeton d&amp;rsquo;API&lt;/em&gt;. S&amp;rsquo;il n&amp;rsquo;est pas dispo, coche juste la case &lt;em&gt;Reg√©n√©r√©&lt;/em&gt; √† droite et clique sur &lt;em&gt;Sauvegarder&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On copie la cl√© et on retourne sur Postman.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;postman init session&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/postman_initsession.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Faut aller dans la section &lt;em&gt;Authorization&lt;/em&gt; et dans le menu d√©roulant &lt;strong&gt;Type&lt;/strong&gt; chercher &lt;em&gt;&lt;strong&gt;API KEY&lt;/strong&gt;&lt;/em&gt;. Pour la Key, faut donc √©crire &lt;em&gt;user_token&lt;/em&gt; et dans Value, coller la cl√© copi√©e juste avant.&lt;/p&gt;
&lt;p&gt;Ensuite dans &lt;em&gt;&lt;strong&gt;Params&lt;/strong&gt;&lt;/em&gt; rajoute l&amp;rsquo;&lt;strong&gt;app_token&lt;/strong&gt; g√©n√©r√© plus haut en activant l&amp;rsquo;API.&lt;/p&gt;
&lt;p&gt;Et si tout est bon tu devrais dois un token de session qui appara√Æt dans le &lt;em&gt;Body&lt;/em&gt; juste en dessous et qui se r√©g√©n√®re √† chaque ex√©cusion de la commande.&lt;/p&gt;
&lt;p&gt;Comme ceci:
&lt;img alt=&#34;postman session token&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/postman_session_token.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ce token va √™tre utile pour les autres commandes que je vais devoir ex√©cuter, donc faut le garder dans un coin.&lt;/p&gt;
&lt;h3 id=&#34;lister-les-tous-les-ordis&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#lister-les-tous-les-ordis&#34;&gt;
        ##
    &lt;/a&gt;
    Lister les tous les ordis
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;Pour que √ßa puisse fonctionner, il faut bien √©videmment une liste d&amp;rsquo;ordis cr√©√©s au pr√©alable. J&amp;rsquo;en ai cr√©√© 4, on devrait donc en voir 4 de list√©.&lt;/p&gt;
&lt;p&gt;Donc le but, c&amp;rsquo;est de lister tous les items, pour ce faire, direction la documentation une nouvelle fois dans la section &lt;strong&gt;Get all items&lt;/strong&gt;. L&amp;rsquo;url est &lt;code&gt;apirest.php/:itemtype/&lt;/code&gt;. Il faut logicement remplacer &lt;code&gt;:itemtype&lt;/code&gt; par &lt;code&gt;Computer&lt;/code&gt; vu que c&amp;rsquo;est ce que je cherche √† afficher ici.&lt;/p&gt;
&lt;p&gt;l&amp;rsquo;url devrait donc ressembler √† un truc comme √ßa : &lt;code&gt;http://localhost:8080/apirest.php/Computer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Param√®tres :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Session-Token : qui est obligatoire.&lt;/li&gt;
&lt;li&gt;App-Token : qu&amp;rsquo;est pas obligatoire, mais si je ne le mets pas √ßa ne fonctionne pas&amp;hellip;&lt;/li&gt;
&lt;li&gt;Session_token : c&amp;rsquo;est pas indiqu√© dans la doc, mais j&amp;rsquo;ai un message d&amp;rsquo;erreur si j&amp;rsquo;le mets pas&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apr√®s avoir ajout√© tout √ßa, et cliqu√© sur &lt;strong&gt;Send&lt;/strong&gt; j&amp;rsquo;obtiens donc un r√©sultat, que voici :
&lt;img alt=&#34;postman list d&amp;rsquo;items&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/postman_get_items.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Okay ! Parfait, √ßa fonctionne ! On va pouvoir passer √† la suite, c-√†-d &lt;em&gt;ajouter&lt;/em&gt; un nouvel ordinateur dans la liste.&lt;/p&gt;
&lt;h3 id=&#34;ajouter-un-nouvel-ordinateur&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#ajouter-un-nouvel-ordinateur&#34;&gt;
        ##
    &lt;/a&gt;
    Ajouter un nouvel ordinateur
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;Pour ajouter un objet, il va falloir changer le type de requ√™te, faut passer en mode &lt;strong&gt;POST&lt;/strong&gt;. L&amp;rsquo;url reste le m√™me qu&amp;rsquo;avant, les param√®tres de query sont les m√™mes cependant maintenant faut d√©finir le pc qu&amp;rsquo;on veut cr√©er.&lt;/p&gt;
&lt;p&gt;Donc pour √ßa faut aller dans &lt;strong&gt;Body&lt;/strong&gt; et s√©lectionner &lt;em&gt;raw&lt;/em&gt; et c&amp;rsquo;est l√† dedans qu&amp;rsquo;on va pouvoir personnaliser notre premier pc cr√©er via l&amp;rsquo;API.&lt;/p&gt;
&lt;p&gt;et j&amp;rsquo;ai ajout√© cet input :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
&amp;quot;input&amp;quot;: {
    &amp;quot;name&amp;quot;: &amp;quot;pc test api&amp;quot;,
    &amp;quot;users_id_tech&amp;quot;: 4,
    &amp;quot;states_id&amp;quot;: 1
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ce qui m&amp;rsquo;a rendu ce r√©sultat :
&lt;img alt=&#34;pc cr√©√©&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/postman_creation_pc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Donc maintenant il ne reste plus qu&amp;rsquo;√† v√©rifier qu&amp;rsquo;il est bien pr√©sent dans la liste des pc de GLPI.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pc cr√©√© dans GLPI&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/GLPI_pc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;√áa y est ! Notre premier objet a √©t√© cr√©√© dans GLPI gr√¢ce √† l&amp;rsquo;API !!&lt;/p&gt;
&lt;h3 id=&#34;modifier-un-√©l√©ment&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#modifier-un-%c3%a9l%c3%a9ment&#34;&gt;
        ##
    &lt;/a&gt;
    Modifier un √©l√©ment
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;Bon c&amp;rsquo;est super, mais le but de l&amp;rsquo;application c&amp;rsquo;est aussi de pouvoir modifier des choses.&lt;/p&gt;
&lt;p&gt;Pour modifier c&amp;rsquo;est rien de bien compliqu√©, on va prendre l&amp;rsquo;exact m√™me URL que pour l&amp;rsquo;ajout, on va modifier la commande par &lt;strong&gt;PUT&lt;/strong&gt; et dans le body on va mettre ceci (en ayant rep√©r√© l&amp;rsquo;id de l&amp;rsquo;objet que l&amp;rsquo;on souhaite modifier ):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
&amp;quot;input&amp;quot;: {
    &amp;quot;id&amp;quot;: &amp;quot;6&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;pc test api modifi√©&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Une fois la commande ex√©cut√©e, on devrait avoir un message comme suivant :
&lt;img alt=&#34;pc modifi√© dans GLPI&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/GLPI_pc_update.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Et pour v√©rifier que la commande a bien √©t√© prise en compte, il suffit de se rendre dans GLPI.
&lt;img alt=&#34;pc modifi√© dans GLPI&#34; src=&#34;https://afidalgo.fr/posts/PFE/part1/GLPI_pc_update2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Et voil√† ! Je sais √† pr√©sent :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Me connecter √† l&amp;rsquo;API&lt;/li&gt;
&lt;li&gt;Ajouter un objet dans GLPI&lt;/li&gt;
&lt;li&gt;Et le modifier&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
